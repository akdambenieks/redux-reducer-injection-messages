{"version":3,"sources":["webpack://@redux-reducer-injection/host/./src/bootstrap.js","webpack://@redux-reducer-injection/host/./src/components/Counter.jsx","webpack://@redux-reducer-injection/host/./src/components/LanguageToggle.jsx","webpack://@redux-reducer-injection/host/./src/components/Messages.jsx","webpack://@redux-reducer-injection/host/./src/constants.js","webpack://@redux-reducer-injection/host/./src/pages/Host/Host.jsx","webpack://@redux-reducer-injection/host/./src/pages/Host/index.js","webpack://@redux-reducer-injection/host/./src/pages/index.js","webpack://@redux-reducer-injection/host/./src/pages/route-builder.js","webpack://@redux-reducer-injection/host/./src/pages/route-config.js","webpack://@redux-reducer-injection/host/./src/store.js"],"names":["dynamicFederation","scope","module","container","window","init","__webpack_share_scopes__","default","get","then","factory","Module","MFE1","React","MFE2","history","createBrowserHistory","App","displayApp2","toggleDisplayApp2","useState","displayApp3","toggleDisplayApp3","store","ReactDOM","document","getElementById","getCount","selectors","enqueueMessage","actions","Counter","dispatch","useDispatch","count","useSelector","state","dispatchIncrementCountMessage","type","payload","dispatchDecrementCountMessage","getLanguage","LanguageToggle","language","dispatchChangeLanguageMessage","e","CHANGE_LANGUAGE","currentTarget","id","LANGUAGE_OPTIONS","option","getMessages","Messages","messages","length","Host","Routes","elements","config","render","route","path","props","exact","ENQUEUE_MESSAGE","DEFAULT_LANGUAGE","INITIAL_COUNT","initialState","appName","hostReducer","action","console","log","result","staticReducers","host","configureStore","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","createStore","createReducer","asyncReducers","injectReducer","key","asyncReducer","replaceReducer","combineReducers","message","reduce","acc","parseInt"],"mappings":"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","file":"src_bootstrap_js.js","sourcesContent":["import React, { Suspense, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport LanguageToggle from './components/LanguageToggle';\nimport Counter from './components/Counter';\nimport Messages from './components/Messages';\nimport { Routes } from './pages';\n\nimport { store } from './store';\n\nconst dynamicFederation = async (scope, module) => {\n  const container = window[scope]; // or get the container somewhere else\n  // Initialize the container, it may provide shared modules\n  await container.init(__webpack_share_scopes__.default);\n  return container.get(module).then((factory) => {\n    const Module = factory();\n    return Module;\n  });\n};\n\nconst MFE1 = React.lazy(() => dynamicFederation('mfe1', './MFE1'));\nconst MFE2 = React.lazy(() => dynamicFederation('mfe2', './MFE2'));\n\nconst history = createBrowserHistory();\n\nconst App = () => {\n  const [displayApp2, toggleDisplayApp2] = useState(false);\n  const [displayApp3, toggleDisplayApp3] = useState(false);\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Routes store={store}/>\n        {/* <div>\n          Welcome to Host App\n          <LanguageToggle />\n          <Counter />\n          <Messages />\n          <div>\n            <Suspense fallback=\"Loading...\">\n              <div>\n                <button onClick={() => toggleDisplayApp2(!displayApp2)}>Show/Hide App2</button>\n              </div>\n              {displayApp2 &&\n                <MFE1 store={store} />\n              }\n              <div>\n                <button onClick={() => toggleDisplayApp3(!displayApp3)}>Show/Hide App3</button>\n              </div>\n              {displayApp3 &&\n                <MFE2 store={store} />\n              }\n            </Suspense>\n          </div>\n        </div> */}\n      </Router>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectors, actions } from '../store'\n\nconst { getCount } = selectors;\nconst { enqueueMessage } = actions;\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const count = useSelector(state => getCount(state));\n  const dispatchIncrementCountMessage = () => dispatch(enqueueMessage({ type: 'UPDATE_COUNT', payload: 1 }));\n  const dispatchDecrementCountMessage = () => dispatch(enqueueMessage({ type: 'UPDATE_COUNT', payload: -1 }));\n  return (\n    <>\n      <p>Current Count: {count}</p>\n      <div>\n        <button onClick={dispatchIncrementCountMessage}>Increment</button>\n        <button onClick={dispatchDecrementCountMessage}>Decrement</button>\n      </div>\n    </>\n  )\n}\n\nexport default Counter;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectors, actions, CHANGE_LANGUAGE } from '../store'\nimport { LANGUAGE_OPTIONS } from '../constants';\n\nconst { getLanguage } = selectors;\nconst { enqueueMessage } = actions;\n\nconst LanguageToggle = () => {\n  const dispatch = useDispatch();\n  const language = useSelector(state => getLanguage(state));\n  const dispatchChangeLanguageMessage = e => dispatch(enqueueMessage({ type: CHANGE_LANGUAGE, payload: e.currentTarget.id }))\n\n  return (\n    <>\n      <p>Current Language: {language}</p>\n      <p>Change Language:</p>\n      {LANGUAGE_OPTIONS.map((option) => (\n        <button\n          onClick={e => dispatchChangeLanguageMessage(e)}\n          id={option}\n          key={option}\n          disabled={language === option}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  )\n}\n\nexport default LanguageToggle;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectors } from '../store';\nconst { getMessages } = selectors;\n\nconst { getCount } = selectors;\nconst Messages = () => {\n  const messages = useSelector(getMessages)\n  return (\n    <div>\n      You have {messages.length} message(s)\n    </div>\n  )\n}\n\nexport default Messages;","export const LANGUAGE_OPTIONS = ['en', 'fr'];","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n  <>\n    <h1>Welcome to Host!</h1>\n    <Link to=\"mfe1\">MFE1</Link>\n    <Link to=\"mfe2\">MFE2</Link>\n  </>\n);","import Host from './Host';\n\nexport default Host;","// eslint-disable-next-line import/prefer-default-export\nexport { default as Routes } from './route-builder';\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport config from './route-config';\n\nconst Routes = ({ store }) => {\n  const elements = config.map(({render, ...route}) => <Route key={route.path} {...route} render={(props) => render({...props, store})} />);\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>{elements}</Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\n// import { dynamicFederation } from '../utils/index'\nimport Host from './Host';\n\nconst dynamicFederation = async (scope, module) => {\n  const container = window[scope]; // or get the container somewhere else\n  // Initialize the container, it may provide shared modules\n  await container.init(__webpack_share_scopes__.default);\n  return container.get(module).then((factory) => {\n    const Module = factory();\n    return Module;\n  });\n};\n\nconst MFE1 = React.lazy(() => dynamicFederation('mfe1', './MFE1'));\nconst MFE2 = React.lazy(() => dynamicFederation('mfe2', './MFE2'));\n\nexport default [\n  {\n    path: '/mfe1',\n    render: (props) => <MFE1 {...props} />,\n    exact: false,\n  },\n  {\n    path: '/mfe2',\n    render: (props) => <MFE2 {...props} />,\n    exact: false,\n  },\n  {\n    path: '/',\n    render: (props) => <Host {...props} />,\n    exact: true,\n  },\n];\n","import { combineReducers, createStore, compose } from 'redux';\n\nexport const CHANGE_LANGUAGE = 'GLOBAL/CHANGE_LANGUAGE';\nexport const ENQUEUE_MESSAGE = 'GLOBAL/ENQUEUE_MESSAGE';\nconst DEFAULT_LANGUAGE = 'en';\nconst INITIAL_COUNT = 0;\n\nconst initialState = {\n  appName: 'host',\n  language: 'en',\n  messages: []\n};\n\nconst hostReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_LANGUAGE: {\n      return {\n        ...state,\n        language: action.payload,\n      };\n    }\n    case ENQUEUE_MESSAGE: {\n      console.log('Action in host',action)\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      }\n      console.log('Result', result)\n    }\n    default:\n      return state;\n  }\n  return result\n};\n\nconst staticReducers = {\n  host: hostReducer,\n};\n\n/**\n * Cf. redux docs:\n * https://redux.js.org/recipes/code-splitting/#defining-an-injectreducer-function\n */\nexport default function configureStore(initialState) {\n  const composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n      : compose;\n\n  const enhancer = composeEnhancers();\n  const store = createStore(createReducer(), enhancer);\n\n  store.asyncReducers = {};\n\n  store.injectReducer = (key, asyncReducer) => {\n    store.asyncReducers[key] = asyncReducer;\n    store.replaceReducer(createReducer(store.asyncReducers));\n  };\n\n  return store;\n}\n\nfunction createReducer(asyncReducers) {\n  return combineReducers({\n    ...staticReducers,\n    ...asyncReducers,\n  });\n}\n\nexport const store = configureStore();\n\nexport const actions = {\n  enqueueMessage: (message) => ({\n    type: ENQUEUE_MESSAGE,\n    payload: message\n  })\n}\n\nexport const selectors = {\n  getMessages: (state) => state.host.messages,\n  getLanguage: (state) => {\n    return state.host.messages.reduce((acc, message) => {\n      if (message.type === 'CHANGE_LANGUAGE') {\n        acc = message.payload\n      };\n      return acc;\n    }, DEFAULT_LANGUAGE);\n  },\n  getCount: (state) => {\n    return state.host.messages.reduce((acc, message) => {\n      if (message.type === 'UPDATE_COUNT') {\n        acc = acc + parseInt(message.payload, 10)\n      };\n      return acc;\n    }, INITIAL_COUNT)\n  }\n}\n"],"sourceRoot":""}