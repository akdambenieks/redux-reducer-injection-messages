{"version":3,"sources":["webpack://@redux-reducer-injection/mfe1/./src/MFE1.js","webpack://@redux-reducer-injection/mfe1/./src/bootstrap.js","webpack://@redux-reducer-injection/mfe1/./src/constants.js","webpack://@redux-reducer-injection/mfe1/./src/reducer.js","webpack://@redux-reducer-injection/mfe1/./src/store.js","webpack://@redux-reducer-injection/mfe1/./src/styled.jsx"],"names":["getGlobalCount","getGlobalLanguage","selectors","MFE1","globalLanguage","useSelector","state","globalCount","marginTop","GREETING","App","store","ReactDOM","document","getElementById","en","fr","UPDATE_GLOBAL_COUNT","SELECT_GLOBAL_LANGUAGE","scope","initialState","reducer","action","type","payload","actions","createStore","combineReducers","mfe1","styled"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,MAAM;AAAEA,gBAAF;AAAkBC;AAAlB,IAAwCC,+CAA9C;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,cAAc,GAAGC,wDAAW,CAAEC,KAAD,IAAWL,iBAAiB,CAACK,KAAD,CAA7B,CAAlC;AACA,QAAMC,WAAW,GAAGF,wDAAW,CAACL,cAAD,CAA/B;AAEA,sBACE;AAAK,SAAK,EAAE;AAAEQ,eAAS,EAAE;AAAb;AAAZ,kBACE,2DAAC,gDAAD,QAAcC,kDAAQ,CAACL,cAAD,CAAtB,CADF,eAEE,yFAAmBG,WAAnB,MAFF,eAGE,4FAHF,eAIE,oFACE,iJAA6D,mFAA7D,wBAAsF,gFAAtF,2CADF,eAEE,4FAAQ,mFAAR,+IAAwJ,iFAAxJ,eAFF,eAGE,4FAAQ,gFAAR,iFAAuF,8EAAvF,iDAAiI,iFAAjI,0CAAuK,oFAAvK,wIAHF,eAIE,+FAAW,0FAAX,wBAA2C,uFAA3C,mDAAmG,gFAAnG,kEAJF,eAKE,sIAAkD,kGAAlD,wBAA0F,+FAA1F,qCALF,eAME,oFAAI,8EAAJ,4HANF,eAOE,oFAAI,8EAAJ,sJAAmJ;AAAG,QAAI,EAAC,uBAAR;AAAgC,UAAM,EAAC;AAAvC,6BAAnJ,mDAA4P,oFAA5P,8BAA4R,4FAA5R,MAPF,CAJF,CADF;AAgBD,CApBD;;AAsBA,iEAAeJ,IAAf,E;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;;AAEA,MAAMO,GAAG,GAAG,MAAM;AAChB,sBACE,2DAAC,iDAAD;AAAU,SAAK,EAAEC,2CAAKA;AAAtB,kBACE,2DAAC,0CAAD,OADF,CADF;AAKD,CAND;;AAQAC,uDAAA,eAAgB,2DAAC,GAAD,OAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E;;;;;;;;;;;;;;;ACdA,iEAAe;AACbC,IAAE,EAAE,kBADS;AAEbC,IAAE,EAAE;AAFS,CAAf,E;;;;;;;;;;;;;;;;;;ACAA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AAEO,MAAMC,KAAK,GAAG,MAAd;AAEP,MAAMC,YAAY,GAAG;AACnBhB,gBAAc,EAAE,IADG;AAEnBG,aAAW,EAAE;AAFM,CAArB;;AAKA,MAAMc,OAAO,GAAG,CAACf,KAAK,GAAGc,YAAT,EAAuBE,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,mBAAL;AACE,aAAO,EACL,GAAGX,KADE;AAELC,mBAAW,EAAED,KAAK,CAACC,WAAN,GAAoBe,MAAM,CAACE;AAFnC,OAAP;;AAIF,SAAKN,sBAAL;AACE,aAAO,EACL,GAAGZ,KADE;AAELF,sBAAc,EAAEkB,MAAM,CAACE;AAFlB,OAAP;;AAIF;AACE,aAAOlB,KAAP;AAZJ;AAcD,CAfD;;AAiBA,MAAMmB,OAAO,GAAG,EAAhB;AAEA,MAAMvB,SAAS,GAAG;AAChBD,mBAAiB,EAAGK,KAAD,IAAWA,KAAK,CAACa,KAAD,CAAL,CAAaf,cAD3B;AAEhBJ,gBAAc,EAAGM,KAAD,IAAWA,KAAK,CAACa,KAAD,CAAL,CAAaZ;AAFxB,CAAlB;AAKA;AACA,iEAAec,OAAf,E;;;;;;;;;;;;;;;;;ACnCA;AACA;AAEA,iEAAeK,kDAAW,CAACC,sDAAe,CAAC;AACzCC,MAAIA;AADqC,CAAD,CAAhB,CAA1B,E;;;;;;;;;;;;;;;;;ACHA;AAEA,iEAAeC,6DAAU;AACzB;AACA;AACA;AACA,CAJA,E","file":"src_bootstrap_js.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectors } from './reducer';\nimport StyledTitle from './styled.jsx';\nimport GREETING from './constants.js';\n\nconst { getGlobalCount, getGlobalLanguage } = selectors;\n\nconst MFE1 = () => {\n  const globalLanguage = useSelector((state) => getGlobalLanguage(state));\n  const globalCount = useSelector(getGlobalCount);\n\n  return (\n    <div style={{ marginTop: '10px' }}>\n      <StyledTitle>{GREETING[globalLanguage]}</StyledTitle>\n      <h1>The count is: {globalCount} </h1>\n      <h3>MFE1 architecture:</h3>\n      <ul>\n        <li>Exposes two endpoints (via webpack 5 module federation): <code>reducer</code> and <code>MFE1</code>.  These are imported by the host app.</li>\n        <li>The <code>reducer</code> endpoint provides access to the MFE reducer (via default export) as well a the scope name to be used in the store (via the <code>scope</code> constant)</li>\n        <li>The <code>MFE1</code> endpoint provides access to the MFE react component itself.  <b>NOTE:</b> the exported react component <b>MUST NOT</b> be wrapped in a redux <code>Provider</code> as this would result in a nested store when it is imported into the host which can lead to errors in reading or updating the store</li>\n        <li>Stores <code>globalLanguage</code> and <code>globalCount</code> in it's local store (scoped to <code>mfe1</code>) for updating display of the greeting and count respectively</li>\n        <li>MFE1 reducer is subscribed to actions of type <code>GLOBAL/SELECT_LANGUAGE</code> and <code>GLOBAL/UPDATE_COUNT</code> to update the mfe1 scoped store</li>\n        <li><b>Note:</b> this component does not dispatch any actions whatsoever, updates to its store are entirely dependent on global actions</li>\n        <li><b>Note:</b> to properly display this MFE as a stand alone app it must be provided with its own store.  In this case the root url for the app (<a href=\"http://localhost:3002\" target=\"_blank\">http://localhost:3002</a>) loads MFE1 wrapped in a redux <code>Provider</code> (found in <code>src/bootstrap.js</code>)</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default MFE1;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport MFE1 from './MFE1';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <MFE1 />\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","export default {\n  en: 'Welcome to MFE1!',\n  fr: 'Bienvenue a MFE1!'\n}","const UPDATE_GLOBAL_COUNT = 'GLOBAL/UPDATE_COUNT';\nconst SELECT_GLOBAL_LANGUAGE = 'GLOBAL/SELECT_LANGUAGE';\n\nexport const scope = 'mfe1';\n\nconst initialState = {\n  globalLanguage: 'en',\n  globalCount: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_GLOBAL_COUNT:\n      return {\n        ...state,\n        globalCount: state.globalCount + action.payload\n      }\n    case SELECT_GLOBAL_LANGUAGE:\n      return {\n        ...state,\n        globalLanguage: action.payload\n      }\n    default:\n      return state\n  }\n};\n\nconst actions = {}\n\nconst selectors = {\n  getGlobalLanguage: (state) => state[scope].globalLanguage,\n  getGlobalCount: (state) => state[scope].globalCount,\n}\n\nexport { selectors, actions };\nexport default reducer;\n","import { createStore, combineReducers } from 'redux';\nimport mfe1 from './reducer';\n\nexport default createStore(combineReducers({\n  mfe1\n}));\n","import styled from 'styled-components';\n\nexport default styled.h1`\n  font-size: 48px;\n  font-weight: 100;\n  font-family: Arial, Helvetica, sans-serif !important;\n`"],"sourceRoot":""}