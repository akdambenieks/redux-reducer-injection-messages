{"version":3,"sources":["webpack://@redux-reducer-injection/mfe1/./src/DispatchControls.js","webpack://@redux-reducer-injection/mfe1/./src/MFE1.js","webpack://@redux-reducer-injection/mfe1/./src/bootstrap.js","webpack://@redux-reducer-injection/mfe1/./src/constants.js","webpack://@redux-reducer-injection/mfe1/./src/mfe1slice.js","webpack://@redux-reducer-injection/mfe1/./src/store.js","webpack://@redux-reducer-injection/mfe1/./src/styled.jsx"],"names":["updateGlobalCount","selectGlobalLanguage","actions","DispatchControls","dispatch","useDispatch","marginTop","border","padding","margin","getGlobalCount","getGlobalLanguage","selectors","MFE1","globalLanguage","useSelector","globalCount","GREETING","App","store","ReactDOM","document","getElementById","en","fr","scope","initialState","globalActions","createAction","mfe1Slice","createSlice","name","reducers","extraReducers","builder","addCase","state","action","payload","addDefaultCase","reducer","configureStore","mfe1","styled"],"mappings":"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","file":"src_bootstrap_js.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions } from './mfe1slice.js';\n\nconst { updateGlobalCount, selectGlobalLanguage } = actions;\n\nconst DispatchControls = () => {\n  const dispatch = useDispatch()\n  return (\n    <div style={{ marginTop: '10px', border: 'solid 1px gainsboro', padding: '10px' }}>\n      <p><b>Global Actions Dispatchers</b></p>\n      <button style={{ margin: '5px'}} onClick={() => dispatch(updateGlobalCount(1))}>Increment Global Counter</button>\n      <button style={{ margin: '5px'}} onClick={() => dispatch(updateGlobalCount(-1))}>Decrement Global Counter</button>\n      <button style={{ margin: '5px'}} onClick={() => dispatch(selectGlobalLanguage('en'))}>Select 'en' as Global Language</button>\n      <button style={{ margin: '5px'}} onClick={() => dispatch(selectGlobalLanguage('fr'))}>Select 'fr' as Global Language</button>\n    </div>\n  );\n};\n\nexport default DispatchControls;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport StyledTitle from './styled.jsx';\nimport GREETING from './constants.js';\nimport { selectors } from './mfe1slice.js';\n\nconst { getGlobalCount, getGlobalLanguage } = selectors;\n\nconst MFE1 = () => {\n  const globalLanguage = useSelector(getGlobalLanguage);\n  const globalCount = useSelector(getGlobalCount);\n  return (\n    <div style={{ marginTop: '10px' }}>\n      <StyledTitle>{GREETING[globalLanguage]}</StyledTitle>\n      <h1>The count is: {globalCount} </h1>\n      <h3>MFE1 architecture:</h3>\n      <ul>\n        <li>Exposes two endpoints (via webpack 5 module federation): <code>reducer</code> and <code>MFE1</code>.  These are imported by the host app.</li>\n        <li>The <code>reducer</code> endpoint provides access to the MFE reducer (via default export) as well a the scope name to be used in the store (via the <code>scope</code> constant)</li>\n        <li>The <code>MFE1</code> endpoint provides access to the MFE react component itself.  <b>NOTE:</b> the exported react component <b>MUST NOT</b> be wrapped in a redux <code>Provider</code> as this would result in a nested store when it is imported into the host which can lead to errors in reading or updating the store</li>\n        <li>Stores <code>globalLanguage</code> and <code>globalCount</code> in it's local store (scoped to <code>mfe1</code>) for updating display of the greeting and count respectively</li>\n        <li>MFE1 reducer is subscribed to actions of type <code>GLOBAL/SELECT_LANGUAGE</code> and <code>GLOBAL/UPDATE_COUNT</code> to update the mfe1 scoped store</li>\n        <li><b>Note:</b> this component does not dispatch any actions whatsoever, updates to its store are entirely dependent on global actions</li>\n        <li><b>Note:</b> to properly display this MFE as a stand alone app it must be provided with its own store.  In this case the root url for the app (<a href=\"http://localhost:3002\" target=\"_blank\">http://localhost:3002</a>) loads MFE1 wrapped in a redux <code>Provider</code> (found in <code>src/bootstrap.js</code>)</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default MFE1;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport MFE1 from './MFE1';\nimport DispatchControls from './DispatchControls';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <DispatchControls />\n      <MFE1 />\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","export default {\n  en: 'Welcome to MFE1!',\n  fr: 'Bienvenue a MFE1!'\n}","import { createSlice, createAction } from '@reduxjs/toolkit'\n\nexport const scope = 'mfe1';\n\nconst initialState = {\n  globalLanguage: 'en',\n  globalCount: 0,\n}\n\n//globally scoped actions must be created separately from mfe scoped actions using createAction\nconst globalActions = {\n  updateGlobalCount: createAction('GLOBAL/UPDATE_COUNT'),\n  selectGlobalLanguage: createAction('GLOBAL/SELECT_LANGUAGE'),\n}\n\nexport const mfe1Slice = createSlice({\n  name: scope,\n  initialState,\n  reducers: {},\n  // global reducers are passed using a builder function via the extraReducers key\n  extraReducers: (builder) => {\n    builder\n      .addCase(globalActions.updateGlobalCount, (state, action) => {\n        state.globalCount += action.payload;\n      })\n      .addCase(globalActions.selectGlobalLanguage, (state, action) => {\n        state.globalLanguage = action.payload;\n      })\n      .addDefaultCase((state) => {\n        state;\n      })\n  }\n});\n\nexport const selectors = {\n  getGlobalLanguage: (state) => state[scope].globalLanguage,\n  getGlobalCount: (state) => state[scope].globalCount,\n}\n\n// global actions are not necessarily dispatched from the MFE, the MFE may simply subscribe to them\n// The actions are included here so they can be accessed for the component locally via the bootstrap vesrions for local development.\nexport const actions = { ...mfe1Slice.actions, ...globalActions };\n\nexport default mfe1Slice.reducer;","import { configureStore } from '@reduxjs/toolkit'\nimport mfe1 from './mfe1slice.js'\n\nexport default configureStore({\n  reducer: {\n    mfe1\n  }\n});\n","import styled from 'styled-components';\n\nexport default styled.h1`\n  font-size: 48px;\n  font-weight: 100;\n  font-family: Arial, Helvetica, sans-serif !important;\n`"],"sourceRoot":""}