{"version":3,"sources":["webpack://@redux-reducer-injection/mfe1/./src/reducer.js"],"names":["UPDATE_COUNT","UPDATE_GLOBAL_COUNT","PROCESS_MESSAGE_QUEUE","hostScope","mfeScope","initialState","language","count","globalCount","globalDefault","reducer","state","action","type","console","log","payload","actions","updateCount","byValue","updateGlobalCount","selectors","getGlobalLanguage","getGlobalCount","getCount"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA,MAAMA,YAAY,GAAG,mBAArB;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,qBAAqB,GAAG,4BAA9B,C,CACA;;AAEA,MAAMC,SAAS,GAAG,MAAlB;AACO,MAAMC,QAAQ,GAAG,MAAjB;AAEP,MAAMC,YAAY,GAAG;AACnBC,UAAQ,EAAE,IADS;AAEnBC,OAAK,EAAE,CAFY;AAGnBC,aAAW,EAAE;AAHM,CAArB;AAMA,MAAMC,aAAa,GAAG;AACpBH,UAAQ,EAAE,IADU;AAEpBC,OAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,qBAAL;AACEY,aAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,MAAM,CAACI,OAAhD,EADF,CAEE;;AACA,aAAOL,KAAP;;AACF,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,mBAAW,EAAEG,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACI;AAF7B,OAAP;;AAIF,SAAKhB,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,aAAK,EAAEI,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACI;AAFvB,OAAP;;AAIF;AACE,aAAOL,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,MAAMM,OAAO,GAAG;AACdC,aAAW,EAAGC,OAAD,KAAc;AACzBN,QAAI,EAAEb,YADmB;AAEzBgB,WAAO,EAAEG;AAFgB,GAAd,CADC;AAKdC,mBAAiB,EAAGD,OAAD,KAAc;AAC/BN,QAAI,EAAEZ,mBADyB;AAE/Be,WAAO,EAAEG;AAFsB,GAAd;AALL,CAAhB;AAWA,MAAME,SAAS,GAAG;AAChBC,mBAAiB,EAAGX,KAAD,IAAWA,KAAK,CAACR,SAAD,CAAL,GAAmBQ,KAAK,CAACR,SAAD,CAAL,CAAiBG,QAApC,GAA+CG,aAAa,CAACH,QAD3E;AAEhBiB,gBAAc,EAAGZ,KAAD,IAAWA,KAAK,CAACP,QAAD,CAAL,GAAkBO,KAAK,CAACP,QAAD,CAAL,CAAgBG,KAAlC,GAA0CF,YAAY,CAACG,WAFlE;AAGhBgB,UAAQ,EAAGb,KAAD,IAAWA,KAAK,CAACP,QAAD,CAAL,GAAkBO,KAAK,CAACP,QAAD,CAAL,CAAgBG,KAAlC,GAA0CF,YAAY,CAACE;AAH5D,CAAlB;AAMA;AACA,iEAAeG,OAAf,E","file":"src_reducer_js.js","sourcesContent":["// import processMessageQueue from './utils';\n\nconst UPDATE_COUNT = 'MFE1/UPDATE_COUNT';\nconst UPDATE_GLOBAL_COUNT = 'GLOBAL/UPDATE_COUNT';\nconst PROCESS_MESSAGE_QUEUE = 'MFE1/PROCESS_MESSAGE_QUEUE';\n// const SELECT_GLOBAL_LANGUAGE = 'GLOBAL/SELECT_LANGUAGE';\n\nconst hostScope = 'host';\nexport const mfeScope = 'mfe1';\n\nconst initialState = {\n  language: 'en',\n  count: 0,\n  globalCount: 0\n};\n\nconst globalDefault = {\n  language: 'en',\n  count: 0\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PROCESS_MESSAGE_QUEUE:\n      console.log('message queue from host: ', action.payload);\n      // const stateUpdates = processMessageQueue(payload);\n      return state\n    case UPDATE_GLOBAL_COUNT:\n      return {\n        ...state,\n        globalCount: state.count + action.payload\n      }\n    case UPDATE_COUNT:\n      return {\n        ...state,\n        count: state.count + action.payload\n      }\n    default:\n      return state\n  }\n};\n\nconst actions = {\n  updateCount: (byValue) => ({\n    type: UPDATE_COUNT,\n    payload: byValue\n  }),\n  updateGlobalCount: (byValue) => ({\n    type: UPDATE_GLOBAL_COUNT,\n    payload: byValue\n  })\n}\n\nconst selectors = {\n  getGlobalLanguage: (state) => state[hostScope] ? state[hostScope].language : globalDefault.language,\n  getGlobalCount: (state) => state[mfeScope] ? state[mfeScope].count : initialState.globalCount,\n  getCount: (state) => state[mfeScope] ? state[mfeScope].count : initialState.count\n}\n\nexport { selectors, actions };\nexport default reducer;\n"],"sourceRoot":""}