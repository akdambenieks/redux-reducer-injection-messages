{"version":3,"sources":["webpack://@redux-reducer-injection/mfe1/./src/reducer.js"],"names":["UPDATE_SCOPE_COUNT","UPDATE_GLOBAL_COUNT","SELECT_GLOBAL_LANGUAGE","mfeScope","initialState","globalLanguage","globalCount","scopeCount","reducer","state","action","type","payload","actions","updateScopeCount","byValue","updateGlobalCount","selectors","getGlobalLanguage","getGlobalCount","getScopeCount"],"mappings":";;;;;;;;;;;;;;;;AAAA,MAAMA,kBAAkB,GAAG,mBAA3B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AAEO,MAAMC,QAAQ,GAAG,MAAjB;AAEP,MAAMC,YAAY,GAAG;AACnBC,gBAAc,EAAE,IADG;AAEnBC,aAAW,EAAE,CAFM;AAGnBC,YAAU,EAAE;AAHO,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,mBAAW,EAAEG,KAAK,CAACH,WAAN,GAAoBI,MAAM,CAACE;AAFnC,OAAP;;AAIF,SAAKZ,kBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,kBAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACE;AAFjC,OAAP;;AAIF,SAAKV,sBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,sBAAc,EAAEK,MAAM,CAACE;AAFlB,OAAP;;AAIF;AACE,aAAOH,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,MAAMI,OAAO,GAAG;AACdC,kBAAgB,EAAGC,OAAD,KAAc;AAC9BJ,QAAI,EAAEX,kBADwB;AAE9BY,WAAO,EAAEG;AAFqB,GAAd,CADJ;AAKdC,mBAAiB,EAAGD,OAAD,KAAc;AAC/BJ,QAAI,EAAEV,mBADyB;AAE/BW,WAAO,EAAEG;AAFsB,GAAd;AALL,CAAhB;AAWA,MAAME,SAAS,GAAG;AAChBC,mBAAiB,EAAGT,KAAD,IAAWA,KAAK,CAACN,QAAD,CAAL,GAAkBM,KAAK,CAACN,QAAD,CAAL,CAAgBE,cAAlC,GAAmDD,YAAY,CAACC,cAD9E;AAEhBc,gBAAc,EAAGV,KAAD,IAAWA,KAAK,CAACN,QAAD,CAAL,GAAkBM,KAAK,CAACN,QAAD,CAAL,CAAgBG,WAAlC,GAAgDF,YAAY,CAACE,WAFxE;AAGhBc,eAAa,EAAGX,KAAD,IAAWA,KAAK,CAACN,QAAD,CAAL,GAAkBM,KAAK,CAACN,QAAD,CAAL,CAAgBI,UAAlC,GAA+CH,YAAY,CAACG;AAHtE,CAAlB;AAMA;AACA,iEAAeC,OAAf,E","file":"src_reducer_js.js","sourcesContent":["const UPDATE_SCOPE_COUNT = 'MFE1/UPDATE_COUNT';\nconst UPDATE_GLOBAL_COUNT = 'GLOBAL/UPDATE_COUNT';\nconst SELECT_GLOBAL_LANGUAGE = 'GLOBAL/SELECT_LANGUAGE'\n\nexport const mfeScope = 'mfe1';\n\nconst initialState = {\n  globalLanguage: 'en',\n  globalCount: 0,\n  scopeCount: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_GLOBAL_COUNT:\n      return {\n        ...state,\n        globalCount: state.globalCount + action.payload\n      }\n    case UPDATE_SCOPE_COUNT:\n      return {\n        ...state,\n        scopeCount: state.scopeCount + action.payload\n      }\n    case SELECT_GLOBAL_LANGUAGE:\n      return {\n        ...state,\n        globalLanguage: action.payload\n      }\n    default:\n      return state\n  }\n};\n\nconst actions = {\n  updateScopeCount: (byValue) => ({\n    type: UPDATE_SCOPE_COUNT,\n    payload: byValue\n  }),\n  updateGlobalCount: (byValue) => ({\n    type: UPDATE_GLOBAL_COUNT,\n    payload: byValue\n  })\n}\n\nconst selectors = {\n  getGlobalLanguage: (state) => state[mfeScope] ? state[mfeScope].globalLanguage : initialState.globalLanguage,\n  getGlobalCount: (state) => state[mfeScope] ? state[mfeScope].globalCount : initialState.globalCount,\n  getScopeCount: (state) => state[mfeScope] ? state[mfeScope].scopeCount : initialState.scopeCount\n}\n\nexport { selectors, actions };\nexport default reducer;\n"],"sourceRoot":""}