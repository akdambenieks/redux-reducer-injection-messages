{"version":3,"sources":["webpack://@redux-reducer-injection/mfe1/./src/mfe1slice.js"],"names":["scope","initialState","globalLanguage","globalCount","globalActions","updateGlobalCount","createAction","selectGlobalLanguage","mfe1Slice","createSlice","name","reducers","extraReducers","builder","addCase","state","action","payload","addDefaultCase","selectors","getGlobalLanguage","getGlobalCount","actions","reducer"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEO,MAAMA,KAAK,GAAG,MAAd;AAEP,MAAMC,YAAY,GAAG;AACnBC,gBAAc,EAAE,IADG;AAEnBC,aAAW,EAAE;AAFM,CAArB,C,CAKA;;AACA,MAAMC,aAAa,GAAG;AACpBC,mBAAiB,EAAEC,8DAAY,CAAC,qBAAD,CADX;AAEpBC,sBAAoB,EAAED,8DAAY,CAAC,wBAAD;AAFd,CAAtB;AAKO,MAAME,SAAS,GAAGC,6DAAW,CAAC;AACnCC,MAAI,EAAEV,KAD6B;AAEnCC,cAFmC;AAGnCU,UAAQ,EAAE,EAHyB;AAInC;AACAC,eAAa,EAAGC,OAAD,IAAa;AAC1BA,WAAO,CACJC,OADH,CACWV,aAAa,CAACC,iBADzB,EAC4C,CAACU,KAAD,EAAQC,MAAR,KAAmB;AAC3DD,WAAK,CAACZ,WAAN,IAAqBa,MAAM,CAACC,OAA5B;AACD,KAHH,EAIGH,OAJH,CAIWV,aAAa,CAACG,oBAJzB,EAI+C,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AAC9DD,WAAK,CAACb,cAAN,GAAuBc,MAAM,CAACC,OAA9B;AACD,KANH,EAOGC,cAPH,CAOmBH,KAAD,IAAW;AACzBA,WAAK;AACN,KATH;AAUD;AAhBkC,CAAD,CAA7B;AAmBA,MAAMI,SAAS,GAAG;AACvBC,mBAAiB,EAAGL,KAAD,IAAWA,KAAK,CAACf,KAAD,CAAL,CAAaE,cADpB;AAEvBmB,gBAAc,EAAGN,KAAD,IAAWA,KAAK,CAACf,KAAD,CAAL,CAAaG;AAFjB,CAAlB,C,CAKP;AACA;;AACO,MAAMmB,OAAO,GAAG,EAAE,GAAGd,SAAS,CAACc,OAAf;AAAwB,KAAGlB;AAA3B,CAAhB;AAEP,iEAAeI,SAAS,CAACe,OAAzB,E","file":"src_mfe1slice_js.js","sourcesContent":["import { createSlice, createAction } from '@reduxjs/toolkit'\n\nexport const scope = 'mfe1';\n\nconst initialState = {\n  globalLanguage: 'en',\n  globalCount: 0,\n}\n\n//globally scoped actions must be created separately from mfe scoped actions using createAction\nconst globalActions = {\n  updateGlobalCount: createAction('GLOBAL/UPDATE_COUNT'),\n  selectGlobalLanguage: createAction('GLOBAL/SELECT_LANGUAGE'),\n}\n\nexport const mfe1Slice = createSlice({\n  name: scope,\n  initialState,\n  reducers: {},\n  // global reducers are passed using a builder function via the extraReducers key\n  extraReducers: (builder) => {\n    builder\n      .addCase(globalActions.updateGlobalCount, (state, action) => {\n        state.globalCount += action.payload;\n      })\n      .addCase(globalActions.selectGlobalLanguage, (state, action) => {\n        state.globalLanguage = action.payload;\n      })\n      .addDefaultCase((state) => {\n        state;\n      })\n  }\n});\n\nexport const selectors = {\n  getGlobalLanguage: (state) => state[scope].globalLanguage,\n  getGlobalCount: (state) => state[scope].globalCount,\n}\n\n// global actions are not necessarily dispatched from the MFE, the MFE may simply subscribe to them\n// The actions are included here so they can be accessed for the component locally via the bootstrap vesrions for local development.\nexport const actions = { ...mfe1Slice.actions, ...globalActions };\n\nexport default mfe1Slice.reducer;"],"sourceRoot":""}