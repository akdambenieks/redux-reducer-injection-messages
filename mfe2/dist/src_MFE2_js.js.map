{"version":3,"sources":["webpack://@redux-reducer-injection/mfe2/./src/MFE2.js","webpack://@redux-reducer-injection/mfe2/./src/components/Counter/index.jsx","webpack://@redux-reducer-injection/mfe2/./src/components/Counter/styled.jsx","webpack://@redux-reducer-injection/mfe2/./src/constants.js","webpack://@redux-reducer-injection/mfe2/./src/reducer.js","webpack://@redux-reducer-injection/mfe2/./src/styled.jsx","webpack://@redux-reducer-injection/mfe2/./src/utils.js"],"names":["getActionLog","getGlobalLanguage","selectors","updateScopeCount","updateGlobalCount","actions","printActionLog","actionLog","map","action","index","MFE2","globalLanguage","useSelector","marginTop","GREETING","Counter","title","count","onIncrement","onDecrement","themeColor","CounterButton","styled","CounterContainer","CounterCount","CounterTitle","CounterWrapper","en","fr","UPDATE_SCOPE_COUNT","UPDATE_GLOBAL_COUNT","SELECT_GLOBAL_LANGUAGE","initialState","actionLogForCount","language","mfeScope","byValue","type","payload","reducer","state","newState","push","StyledTitle","CountUpdateValueContainer","StyledLabel","StyledInput","processGlobalLanguageActions","globalLanguageActions","length","processGlobalCountActions","globalCountActions","reduce","acc","processScopeCountActions","scopeCountActions"],"mappings":"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","file":"src_MFE2_js.js","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { actions, selectors } from './reducer';\nimport { StyledTitle, CountUpdateValueContainer, StyledInput, StyledLabel } from './styled.jsx';\nimport GREETING from './constants.js';\nimport Counter from './components/Counter/index.jsx';\n\n// const { getGlobalLanguage, getScopeCount, getGlobalCount } = selectors;\nconst { getActionLog, getGlobalLanguage } = selectors;\nconst { updateScopeCount, updateGlobalCount } = actions;\n\nconst printActionLog = (actionLog) => {\n  return actionLog.map((action, index) => {\n    return (<div key={`${index}-action`}>{index+1}: {action}</div>)\n    }) \n }\n\nconst MFE2 = () => {\n  // const dispatch = useDispatch();\n  const globalLanguage = useSelector(getGlobalLanguage);\n  const actionLog = useSelector(getActionLog);\n \n  // const scopeCount = useSelector(getScopeCount);\n  // const globalCount = useSelector(getGlobalCount);\n  // const [countUpdateValue, setCountUpdateValue] = useState(1);\n\n  // const onScopeIncrement = () => dispatch(updateScopeCount(parseInt(countUpdateValue)));\n  // const onScopeDecrement = () =>  dispatch(updateScopeCount(parseInt(-countUpdateValue)));\n  // const onGlobalIncrement = () => dispatch(updateGlobalCount(parseInt(countUpdateValue)));\n  // const onGlobalDecrement = () =>  dispatch(updateGlobalCount(parseInt(-countUpdateValue)));\n  // const changeCountUpdateValue = value => setCountUpdateValue(value);\n  \n  return (\n    <div style={{ marginTop: '10px' }}>\n      <StyledTitle>{GREETING[globalLanguage]}</StyledTitle>\n      {\n        printActionLog(actionLog)\n      }\n      {/* <CountUpdateValueContainer>\n        <StyledLabel htmlFor=\"count-update-value\">Update Count By:</StyledLabel>\n        <StyledInput type=\"number\" id=\"count-update-value\" onChange={e => changeCountUpdateValue(e.currentTarget.value)} value={countUpdateValue} />\n      </CountUpdateValueContainer> */}\n      {/*\n        <Counter title=\"Global Counter for MFE2\" count={globalCount} onIncrement={onGlobalIncrement} onDecrement={onGlobalDecrement} themeColor=\"blue\" />\n        <Counter title=\"Counter for MFE2 Scope\" count={scopeCount} onIncrement={onScopeIncrement} onDecrement={onScopeDecrement} themeColor=\"red\" />\n      */}\n    </div>\n  );\n};\n\nexport default MFE2;\n","import React from 'react';\nimport { CounterContainer, CounterButton, CounterCount, CounterTitle, CounterWrapper } from './styled.jsx';\n\nconst Counter = ({ title, count, onIncrement, onDecrement, themeColor }) => {\n  return (\n    <CounterWrapper>\n      <CounterTitle themeColor={themeColor}>{title}</CounterTitle>\n      <CounterContainer>\n        <CounterButton onClick={() => onIncrement()} themeColor={themeColor}>+</CounterButton>\n        <CounterCount>{count}</CounterCount>\n        <CounterButton onClick={() => onDecrement()} themeColor={themeColor}>-</CounterButton>\n      </CounterContainer>\n    </CounterWrapper>\n  )\n}\n\nexport default Counter;","import styled from 'styled-components';\n\nexport const CounterButton = styled.button`\n  font-size: 32px;\n  padding: 4px 16px;\n  background-color: white;\n  text-decoration: none;\n  font-weight: 500;\n  color: ${({ themeColor }) => themeColor};\n  border: solid 1px gainsboro;\n  border-radius: 8px;\n`\n\nexport const CounterContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  padding: 16px 0px;\n`\n\nexport const CounterCount = styled.div`\n  margin: 0px 16px;\n  font-size: 48px;\n  min-width: 80px;\n  text-align: center;\n`\n\nexport const CounterTitle = styled.div`\n  display: inline;\n  font-size: 24px;\n  color: ${({ themeColor }) => themeColor};\n`\n\nexport const CounterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: middle;\n  font-family: Arial, Helvetica, sans-serif !important;\n  margin-bottom: 48px;\n`","export default {\n  en: 'Welcome to MFE2!',\n  fr: 'Bienvenue a MFE2!'\n}","import { processGlobalLanguageActions, processGlobalCountActions, processScopeCountActions } from './utils.js';\n\nconst UPDATE_SCOPE_COUNT = 'MFE2/UPDATE_COUNT';\nconst UPDATE_GLOBAL_COUNT = 'GLOBAL/UPDATE_COUNT';\nconst SELECT_GLOBAL_LANGUAGE = 'GLOBAL/SELECT_LANGUAGE'\n\nconst initialState = {\n  actionLogForCount: [],\n  language: 'en'\n};\n\nexport const mfeScope = 'mfe2';\n\nexport const actions = {\n  updateScopeCount: (byValue) => ({\n    type: UPDATE_SCOPE_COUNT,\n    payload: byValue\n  }),\n  updateGlobalCount: (byValue) => ({\n    type: UPDATE_GLOBAL_COUNT,\n    payload: byValue\n  })\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_GLOBAL_COUNT:\n      const newState = { ...state };\n      if (action.payload === 1) {\n        newState.actionLogForCount.push('Increment occured');\n      }\n      else {\n        newState.actionLogForCount.push(\"Decrement occured\");\n      }\n      return newState;\n    case SELECT_GLOBAL_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nexport const selectors = {\n  getGlobalLanguage: (state) => state[mfeScope].language,\n  getActionLog: (state) => state[mfeScope].actionLogForCount\n  // getScopeCount: (state) => processScopeCountActions(state[mfeScope].actionLog),\n  // getGlobalCount: (state) => processGlobalCountActions(state[mfeScope].actionLog)\n}\n\nexport default reducer;\n","import styled from 'styled-components';\n\nexport const StyledTitle = styled.h1`\n  font-size: 48px;\n  font-weight: 100;\n  font-family: Arial, Helvetica, sans-serif !important;\n`\n\nexport const CountUpdateValueContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 48px;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const StyledLabel = styled.label`\n  font-size: 24px;\n  color: red;\n  font-family: Arial, Helvetica, sans-serif !important;\n  padding-bottom: 16px;\n`\n\nexport const StyledInput = styled.input`\n  padding: 4px 8px;\n  font-size: 32px;\n  border: solid 1px gainsboro;\n  border-radius: 8px;\n  font-family: Arial, Helvetica, sans-serif !important;\n  text-align: center;\n  width: 100px;\n`","const processGlobalLanguageActions = (actions) => {\n  const globalLanguageActions = actions['GLOBAL/SELECT_LANGUAGE'] || [];\n  return globalLanguageActions[actions.length - 1] || 'en';\n} \n\nconst processGlobalCountActions = (actions) => {\n  const globalCountActions = actions['GLOBAL/UPDATE_COUNT'] || [];\n  return globalCountActions.reduce((acc, action) => {\n    return acc + action\n  }, 0)\n}\n\nconst processScopeCountActions = (actions) => {\n  const scopeCountActions = actions['MFE2/UPDATE_COUNT'] || [];\n  return scopeCountActions.reduce((acc, action) => {\n    return acc + action\n  }, 0)\n}\n\nexport {\n  processGlobalLanguageActions,\n  processGlobalCountActions,\n  processScopeCountActions\n}"],"sourceRoot":""}