{"version":3,"sources":["webpack://@redux-reducer-injection/mfe2/./src/MFE2.js","webpack://@redux-reducer-injection/mfe2/./src/reducer.js"],"names":["getLanguage","getAppName","getLanguageFromMessages","selectors","changeAppNameAction","enqueueMessageAction","actions","mfeScope","MFE2","dispatch","useDispatch","languageFromHost","useSelector","state","language","appName","remoteAppInput","setRemoteAppInput","useState","remoteAppIncrementDecrementByValue","setRemoteAppIncrementDecrementByValue","marginTop","marginRight","e","target","value","type","payload","MFE2Wrapper","props","store","useEffect","injectReducer","reducer","console","log","initialState","hostAppScope","CHANGE_APP_NAME","CHANGE_LANGUAGE","ENQUEUE_MESSAGE","message","action","messages","reduce","acc"],"mappings":"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","file":"src_MFE2_js.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\n\nimport reducer, { actions, selectors } from './reducer';\n\nconst { getLanguage, getAppName, getLanguageFromMessages } = selectors;\nconst { changeAppNameAction, enqueueMessageAction } = actions;\n\nconst mfeScope = 'mfe2';\n\nconst MFE2 = () => {\n  const dispatch = useDispatch();\n  const languageFromHost = useSelector(state => getLanguageFromMessages(state));\n  const language = useSelector(state => getLanguage(state));\n  const appName = useSelector(state => getAppName(state));\n  const [remoteAppInput, setRemoteAppInput] = useState('');\n  const [remoteAppIncrementDecrementByValue, setRemoteAppIncrementDecrementByValue] = useState(1);\n  \n  return (\n    <div style={{ marginTop: '10px' }}>\n      <div>MFE2</div>\n      <div>\n        MFE2's name from the redux store : {appName}\n      </div>\n\n      <div>\n        MFE2's language from the redux store : {language}\n      </div>\n\n      <div>\n        MFE2's language derived from host getMessages : {languageFromHost}\n      </div>\n\n      <div>\n        <input\n          style={{ marginRight: '10px' }}\n          type=\"text\"\n          onChange={(e) => {\n            setRemoteAppInput(e.target.value);\n          }}\n        />\n        <button onClick={() => dispatch(changeAppNameAction(remoteAppInput))}>\n          Dispatch MFE2 new name\n        </button>\n        <div>\n          <label htmlFor=\"increment-decrement-by-value\">Increment/Decrement by: </label>\n          <input\n            id=\"increment-decrement-by-value\"\n            style={{ marginRight: '10px' }}\n            value={remoteAppIncrementDecrementByValue}\n            type=\"number\"\n            onChange={(e) => {\n              setRemoteAppIncrementDecrementByValue(e.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <button onClick={() => dispatch(enqueueMessageAction(\n            {\n              type: 'UPDATE_COUNT',\n              payload: remoteAppIncrementDecrementByValue\n            }\n          ))}>\n            Increment\n          </button>\n          <button onClick={() => dispatch(enqueueMessageAction(\n            {\n              type: 'UPDATE_COUNT',\n              payload: -remoteAppIncrementDecrementByValue\n            }\n          ))}>\n            Decrement\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst MFE2Wrapper = (props) => {\n  const { store } = props;\n  useEffect(() => {\n    store.injectReducer(mfeScope, reducer);\n    return () => console.log('Unmounting MFE2')\n  }, []);\n\n  return (\n    <Provider store={store || {}}>\n      <MFE2 />\n    </Provider>\n  );\n};\n\nexport default MFE2Wrapper;\n","const initialState = {\n  appName: 'mfe2',\n  language: 'en'\n};\n\nconst mfeScope = 'mfe2';\nconst hostAppScope = 'host';\n\nconst CHANGE_APP_NAME = 'APP3/CHANGE_APP_NAME';\nconst CHANGE_LANGUAGE = 'APP3/CHANGE_LANGUAGE';\nconst ENQUEUE_MESSAGE = 'HOST/ENQUEUE_MESSAGE';\n\nexport const actions = {\n  changeAppNameAction: (appName) => {\n    return { type: CHANGE_APP_NAME, payload: appName };\n  },\n  enqueueMessageAction: (message) => {\n    return { type: ENQUEUE_MESSAGE, payload: message };\n  }\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_APP_NAME: {\n      return {\n        ...state,\n        appName: action.payload,\n      };\n    }\n    case CHANGE_LANGUAGE: {\n      return {...state}\n    }\n  }\n  return state;\n};\n\nexport const selectors = {\n  getAppName: (state) => state[mfeScope] ? state[mfeScope].appName : initialState.appName,\n  getLanguage: (state) => state[mfeScope] ? state[mfeScope].language : initialState.language,\n  getLanguageFromMessages: (state) => {\n    if (state[hostAppScope] && state[hostAppScope].messages) {\n      return state[hostAppScope].messages.reduce((acc, message) => {\n        if (message.type === 'CHANGE_LANGUAGE') {\n          acc = message.payload\n        }\n        return acc\n      }, initialState.language)\n    }\n  }\n}\n\nexport default reducer;\n"],"sourceRoot":""}