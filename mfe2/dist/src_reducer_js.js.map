{"version":3,"sources":["webpack://@redux-reducer-injection/mfe2/./src/reducer.js","webpack://@redux-reducer-injection/mfe2/./src/utils.js"],"names":["UPDATE_SCOPE_COUNT","UPDATE_GLOBAL_COUNT","initialState","actionLog","mfeScope","actions","updateScopeCount","byValue","type","payload","updateGlobalCount","reducer","state","action","startsWith","existingLogForActionType","selectors","getGlobalLanguage","processGlobalLanguageActions","getScopeCount","processScopeCountActions","getGlobalCount","processGlobalCountActions","globalLanguageActions","length","globalCountActions","reduce","acc","scopeCountActions"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA,MAAMA,kBAAkB,GAAG,mBAA3B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,WAAS,EAAE;AADQ,CAArB;AAIO,MAAMC,QAAQ,GAAG,MAAjB;AAEA,MAAMC,OAAO,GAAG;AACrBC,kBAAgB,EAAGC,OAAD,KAAc;AAC9BC,QAAI,EAAER,kBADwB;AAE9BS,WAAO,EAAEF;AAFqB,GAAd,CADG;AAKrBG,mBAAiB,EAAGH,OAAD,KAAc;AAC/BC,QAAI,EAAEP,mBADyB;AAE/BQ,WAAO,EAAEF;AAFsB,GAAd;AALE,CAAhB;;AAYP,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAChD,MAAIA,MAAM,CAACL,IAAP,CAAYM,UAAZ,CAAuB,SAAvB,KAAqCD,MAAM,CAACL,IAAP,CAAYM,UAAZ,CAAuB,OAAvB,CAAzC,EAA0E;AACxE,UAAMC,wBAAwB,GAAGH,KAAK,CAACT,SAAN,CAAgBU,MAAM,CAACL,IAAvB,KAAgC,EAAjE;AACA,WAAO,EACL,GAAGI,KADE;AAELT,eAAS,EAAE,EAAC,GAAGS,KAAK,CAACT,SAAV;AAAqB,SAACU,MAAM,CAACL,IAAR,GAAe,CAAC,GAAGO,wBAAJ,EAA8BF,MAAM,CAACJ,OAArC;AAApC;AAFN,KAAP;AAID;;AACD,SAAOG,KAAP;AACD,CATD;;AAWO,MAAMI,SAAS,GAAG;AACvBC,mBAAiB,EAAGL,KAAD,IAAWM,uEAA4B,CAACN,KAAK,CAACR,QAAD,CAAL,CAAgBD,SAAjB,CADnC;AAEvBgB,eAAa,EAAGP,KAAD,IAAWQ,mEAAwB,CAACR,KAAK,CAACR,QAAD,CAAL,CAAgBD,SAAjB,CAF3B;AAGvBkB,gBAAc,EAAGT,KAAD,IAAWU,oEAAyB,CAACV,KAAK,CAACR,QAAD,CAAL,CAAgBD,SAAjB;AAH7B,CAAlB;AAMP,iEAAeQ,OAAf,E;;;;;;;;;;;;;;;;;ACxCA,MAAMO,4BAA4B,GAAIb,OAAD,IAAa;AAChD,QAAMkB,qBAAqB,GAAGlB,OAAO,CAAC,wBAAD,CAAP,IAAqC,EAAnE;AACA,SAAOkB,qBAAqB,CAAClB,OAAO,CAACmB,MAAR,GAAiB,CAAlB,CAArB,IAA6C,IAApD;AACD,CAHD;;AAKA,MAAMF,yBAAyB,GAAIjB,OAAD,IAAa;AAC7C,QAAMoB,kBAAkB,GAAGpB,OAAO,CAAC,qBAAD,CAAP,IAAkC,EAA7D;AACA,SAAOoB,kBAAkB,CAACC,MAAnB,CAA0B,CAACC,GAAD,EAAMd,MAAN,KAAiB;AAChD,WAAOc,GAAG,GAAGd,MAAb;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CALD;;AAOA,MAAMO,wBAAwB,GAAIf,OAAD,IAAa;AAC5C,QAAMuB,iBAAiB,GAAGvB,OAAO,CAAC,mBAAD,CAAP,IAAgC,EAA1D;AACA,SAAOuB,iBAAiB,CAACF,MAAlB,CAAyB,CAACC,GAAD,EAAMd,MAAN,KAAiB;AAC/C,WAAOc,GAAG,GAAGd,MAAb;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CALD","file":"src_reducer_js.js","sourcesContent":["import { processGlobalLanguageActions, processGlobalCountActions, processScopeCountActions } from './utils.js';\n\nconst UPDATE_SCOPE_COUNT = 'MFE2/UPDATE_COUNT';\nconst UPDATE_GLOBAL_COUNT = 'GLOBAL/UPDATE_COUNT';\n\nconst initialState = {\n  actionLog: {}\n};\n\nexport const mfeScope = 'mfe2';\n\nexport const actions = {\n  updateScopeCount: (byValue) => ({\n    type: UPDATE_SCOPE_COUNT,\n    payload: byValue\n  }),\n  updateGlobalCount: (byValue) => ({\n    type: UPDATE_GLOBAL_COUNT,\n    payload: byValue\n  })\n};\n\n\nconst reducer = (state = initialState, action) => {\n  if (action.type.startsWith('GLOBAL/') || action.type.startsWith('MFE2/')) {\n    const existingLogForActionType = state.actionLog[action.type] || [];\n    return {\n      ...state,\n      actionLog: {...state.actionLog, [action.type]: [...existingLogForActionType, action.payload]}\n    }\n  }\n  return state;\n};\n\nexport const selectors = {\n  getGlobalLanguage: (state) => processGlobalLanguageActions(state[mfeScope].actionLog),\n  getScopeCount: (state) => processScopeCountActions(state[mfeScope].actionLog),\n  getGlobalCount: (state) => processGlobalCountActions(state[mfeScope].actionLog)\n}\n\nexport default reducer;\n","const processGlobalLanguageActions = (actions) => {\n  const globalLanguageActions = actions['GLOBAL/SELECT_LANGUAGE'] || [];\n  return globalLanguageActions[actions.length - 1] || 'en';\n} \n\nconst processGlobalCountActions = (actions) => {\n  const globalCountActions = actions['GLOBAL/UPDATE_COUNT'] || [];\n  return globalCountActions.reduce((acc, action) => {\n    return acc + action\n  }, 0)\n}\n\nconst processScopeCountActions = (actions) => {\n  const scopeCountActions = actions['MFE2/UPDATE_COUNT'] || [];\n  return scopeCountActions.reduce((acc, action) => {\n    return acc + action\n  }, 0)\n}\n\nexport {\n  processGlobalLanguageActions,\n  processGlobalCountActions,\n  processScopeCountActions\n}"],"sourceRoot":""}