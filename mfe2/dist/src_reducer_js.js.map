{"version":3,"sources":["webpack://@redux-reducer-injection/mfe2/./src/reducer.js"],"names":["UPDATE_COUNT","UPDATE_GLOBAL_COUNT","PROCESS_MESSAGE_QUEUE","initialState","count","globalCount","globalDefault","language","mfeScope","hostScope","actions","updateCount","byValue","type","payload","updateGlobalCount","reducer","state","action","console","log","selectors","getGlobalLanguage","getCount","getGlobalCount"],"mappings":";;;;;;;;;;;;;;;;AAAA,MAAMA,YAAY,GAAG,mBAArB;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,qBAAqB,GAAG,4BAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,OAAK,EAAE,CADY;AAEnBC,aAAW,EAAE;AAFM,CAArB;AAKA,MAAMC,aAAa,GAAG;AACpBC,UAAQ,EAAE,IADU;AAEpBH,OAAK,EAAE;AAFa,CAAtB;AAKO,MAAMI,QAAQ,GAAG,MAAjB;AACP,MAAMC,SAAS,GAAG,MAAlB;AAEO,MAAMC,OAAO,GAAG;AACrBC,aAAW,EAAGC,OAAD,KAAc;AACzBC,QAAI,EAAEb,YADmB;AAEzBc,WAAO,EAAEF;AAFgB,GAAd,CADQ;AAKrBG,mBAAiB,EAAGH,OAAD,KAAc;AAC/BC,QAAI,EAAEZ,mBADyB;AAE/Ba,WAAO,EAAEF;AAFsB,GAAd;AALE,CAAhB;;AAYP,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKX,qBAAL;AACEiB,aAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,MAAM,CAACJ,OAAtC;AACA,aAAOG,KAAP;;AACF,SAAKhB,mBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELZ,mBAAW,EAAEY,KAAK,CAACb,KAAN,GAAcc,MAAM,CAACJ;AAF7B,OAAP;;AAIF,SAAKd,YAAL;AAAmB;AACjB,eAAO,EACL,GAAGiB,KADE;AAELb,eAAK,EAAEa,KAAK,CAACb,KAAN,GAAcc,MAAM,CAACJ;AAFvB,SAAP;AAID;AAdH;;AAgBA,SAAOG,KAAP;AACD,CAlBD;;AAoBO,MAAMI,SAAS,GAAG;AACvBC,mBAAiB,EAAGL,KAAD,IAAWA,KAAK,CAACR,SAAD,CAAL,GAAmBQ,KAAK,CAACR,SAAD,CAAL,CAAiBF,QAApC,GAA+CD,aAAa,CAACC,QADpE;AAEvBgB,UAAQ,EAAGN,KAAD,IAAWA,KAAK,CAACT,QAAD,CAAL,GAAkBS,KAAK,CAACT,QAAD,CAAL,CAAgBJ,KAAlC,GAA0CD,YAAY,CAACC,KAFrD;AAGvBoB,gBAAc,EAAGP,KAAD,IAAWA,KAAK,CAACT,QAAD,CAAL,GAAkBS,KAAK,CAACT,QAAD,CAAL,CAAgBJ,KAAlC,GAA0CD,YAAY,CAACE;AAH3D,CAAlB;AAMP,iEAAeW,OAAf,E","file":"src_reducer_js.js","sourcesContent":["const UPDATE_COUNT = 'MFE2/UPDATE_COUNT';\nconst UPDATE_GLOBAL_COUNT = 'GLOBAL/UPDATE_COUNT';\nconst PROCESS_MESSAGE_QUEUE = 'MFE2/PROCESS_MESSAGE_QUEUE';\n\nconst initialState = {\n  count: 0,\n  globalCount: 0\n};\n\nconst globalDefault = {\n  language: 'en',\n  count: 0\n}\n\nexport const mfeScope = 'mfe2';\nconst hostScope = 'host';\n\nexport const actions = {\n  updateCount: (byValue) => ({\n    type: UPDATE_COUNT,\n    payload: byValue\n  }),\n  updateGlobalCount: (byValue) => ({\n    type: UPDATE_GLOBAL_COUNT,\n    payload: byValue\n  })\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PROCESS_MESSAGE_QUEUE:\n      console.log('message queue: ', action.payload);\n      return state\n    case UPDATE_GLOBAL_COUNT:\n      return {\n        ...state,\n        globalCount: state.count + action.payload\n      }\n    case UPDATE_COUNT: {\n      return {\n        ...state,\n        count: state.count + action.payload\n      }\n    }\n  }\n  return state;\n};\n\nexport const selectors = {\n  getGlobalLanguage: (state) => state[hostScope] ? state[hostScope].language : globalDefault.language,\n  getCount: (state) => state[mfeScope] ? state[mfeScope].count : initialState.count,\n  getGlobalCount: (state) => state[mfeScope] ? state[mfeScope].count : initialState.globalCount\n}\n\nexport default reducer;\n"],"sourceRoot":""}