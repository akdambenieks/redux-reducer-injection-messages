{"version":3,"sources":["webpack://@redux-reducer-injection/mfe2/./src/reducer.js","webpack://@redux-reducer-injection/mfe2/./src/utils.js"],"names":["UPDATE_SCOPE_COUNT","UPDATE_GLOBAL_COUNT","SELECT_GLOBAL_LANGUAGE","initialState","actionLogForCount","language","mfeScope","actions","updateScopeCount","byValue","type","payload","updateGlobalCount","reducer","state","action","newState","push","selectors","getGlobalLanguage","getActionLog","processGlobalLanguageActions","globalLanguageActions","length","processGlobalCountActions","globalCountActions","reduce","acc","processScopeCountActions","scopeCountActions"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAEA,MAAMA,kBAAkB,GAAG,mBAA3B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,mBAAiB,EAAE,EADA;AAEnBC,UAAQ,EAAE;AAFS,CAArB;AAKO,MAAMC,QAAQ,GAAG,MAAjB;AAEA,MAAMC,OAAO,GAAG;AACrBC,kBAAgB,EAAGC,OAAD,KAAc;AAC9BC,QAAI,EAAEV,kBADwB;AAE9BW,WAAO,EAAEF;AAFqB,GAAd,CADG;AAKrBG,mBAAiB,EAAGH,OAAD,KAAc;AAC/BC,QAAI,EAAET,mBADyB;AAE/BU,WAAO,EAAEF;AAFsB,GAAd;AALE,CAAhB;;AAYP,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKT,mBAAL;AACE,YAAMe,QAAQ,GAAG,EAAE,GAAGF;AAAL,OAAjB;;AACA,UAAIC,MAAM,CAACJ,OAAP,KAAmB,CAAvB,EAA0B;AACxBK,gBAAQ,CAACZ,iBAAT,CAA2Ba,IAA3B,CAAgC,mBAAhC;AACD,OAFD,MAGK;AACHD,gBAAQ,CAACZ,iBAAT,CAA2Ba,IAA3B,CAAgC,mBAAhC;AACD;;AACD,aAAOD,QAAP;;AACF,SAAKd,sBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELT,gBAAQ,EAAEU,MAAM,CAACJ;AAFZ,OAAP;;AAIF;AACE,aAAOG,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBO,MAAMI,SAAS,GAAG;AACvBC,mBAAiB,EAAGL,KAAD,IAAWA,KAAK,CAACR,QAAD,CAAL,CAAgBD,QADvB;AAEvBe,cAAY,EAAGN,KAAD,IAAWA,KAAK,CAACR,QAAD,CAAL,CAAgBF,iBAFlB,CAGvB;AACA;;AAJuB,CAAlB;AAOP,iEAAeS,OAAf,E;;;;;;;;;;;;;;;;;ACrDA,MAAMQ,4BAA4B,GAAId,OAAD,IAAa;AAChD,QAAMe,qBAAqB,GAAGf,OAAO,CAAC,wBAAD,CAAP,IAAqC,EAAnE;AACA,SAAOe,qBAAqB,CAACf,OAAO,CAACgB,MAAR,GAAiB,CAAlB,CAArB,IAA6C,IAApD;AACD,CAHD;;AAKA,MAAMC,yBAAyB,GAAIjB,OAAD,IAAa;AAC7C,QAAMkB,kBAAkB,GAAGlB,OAAO,CAAC,qBAAD,CAAP,IAAkC,EAA7D;AACA,SAAOkB,kBAAkB,CAACC,MAAnB,CAA0B,CAACC,GAAD,EAAMZ,MAAN,KAAiB;AAChD,WAAOY,GAAG,GAAGZ,MAAb;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CALD;;AAOA,MAAMa,wBAAwB,GAAIrB,OAAD,IAAa;AAC5C,QAAMsB,iBAAiB,GAAGtB,OAAO,CAAC,mBAAD,CAAP,IAAgC,EAA1D;AACA,SAAOsB,iBAAiB,CAACH,MAAlB,CAAyB,CAACC,GAAD,EAAMZ,MAAN,KAAiB;AAC/C,WAAOY,GAAG,GAAGZ,MAAb;AACD,GAFM,EAEJ,CAFI,CAAP;AAGD,CALD","file":"src_reducer_js.js","sourcesContent":["import { processGlobalLanguageActions, processGlobalCountActions, processScopeCountActions } from './utils.js';\n\nconst UPDATE_SCOPE_COUNT = 'MFE2/UPDATE_COUNT';\nconst UPDATE_GLOBAL_COUNT = 'GLOBAL/UPDATE_COUNT';\nconst SELECT_GLOBAL_LANGUAGE = 'GLOBAL/SELECT_LANGUAGE'\n\nconst initialState = {\n  actionLogForCount: [],\n  language: 'en'\n};\n\nexport const mfeScope = 'mfe2';\n\nexport const actions = {\n  updateScopeCount: (byValue) => ({\n    type: UPDATE_SCOPE_COUNT,\n    payload: byValue\n  }),\n  updateGlobalCount: (byValue) => ({\n    type: UPDATE_GLOBAL_COUNT,\n    payload: byValue\n  })\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_GLOBAL_COUNT:\n      const newState = { ...state };\n      if (action.payload === 1) {\n        newState.actionLogForCount.push('Increment occured');\n      }\n      else {\n        newState.actionLogForCount.push(\"Decrement occured\");\n      }\n      return newState;\n    case SELECT_GLOBAL_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nexport const selectors = {\n  getGlobalLanguage: (state) => state[mfeScope].language,\n  getActionLog: (state) => state[mfeScope].actionLogForCount\n  // getScopeCount: (state) => processScopeCountActions(state[mfeScope].actionLog),\n  // getGlobalCount: (state) => processGlobalCountActions(state[mfeScope].actionLog)\n}\n\nexport default reducer;\n","const processGlobalLanguageActions = (actions) => {\n  const globalLanguageActions = actions['GLOBAL/SELECT_LANGUAGE'] || [];\n  return globalLanguageActions[actions.length - 1] || 'en';\n} \n\nconst processGlobalCountActions = (actions) => {\n  const globalCountActions = actions['GLOBAL/UPDATE_COUNT'] || [];\n  return globalCountActions.reduce((acc, action) => {\n    return acc + action\n  }, 0)\n}\n\nconst processScopeCountActions = (actions) => {\n  const scopeCountActions = actions['MFE2/UPDATE_COUNT'] || [];\n  return scopeCountActions.reduce((acc, action) => {\n    return acc + action\n  }, 0)\n}\n\nexport {\n  processGlobalLanguageActions,\n  processGlobalCountActions,\n  processScopeCountActions\n}"],"sourceRoot":""}