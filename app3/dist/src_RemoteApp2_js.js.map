{"version":3,"sources":["webpack://@redux-reducer-injection-messages/app3/./src/RemoteApp2.js","webpack://@redux-reducer-injection-messages/app3/./src/reducer.js"],"names":["getLanguage","getAppName","getLanguageFromMessages","selectors","changeAppNameAction","actions","remoteAppScope","RemoteApp","dispatch","useDispatch","languageFromHost","useSelector","state","language","appName","remoteAppInput","setRemoteAppInput","useState","marginTop","marginRight","e","target","value","RemoteAppWrapper","props","store","useEffect","injectReducer","reducer","console","log","initialState","hostAppScope","CHANGE_APP_NAME","CHANGE_LANGUAGE","type","payload","action","getMessagesFromHost","messages","reduce","acc","message"],"mappings":"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","file":"src_RemoteApp2_js.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\n\nimport reducer, { actions, selectors } from './reducer';\n\nconst { getLanguage, getAppName, getLanguageFromMessages } = selectors;\nconst { changeAppNameAction } = actions;\n\nconst remoteAppScope = 'remoteApp2';\n\nconst RemoteApp = () => {\n  const dispatch = useDispatch();\n  const languageFromHost = useSelector(state => getLanguageFromMessages(state));\n  const language = useSelector(state => getLanguage(state));\n  const appName = useSelector(state => getAppName(state));\n  const [remoteAppInput, setRemoteAppInput] = useState('');\n  \n  return (\n    <div style={{ marginTop: '10px' }}>\n      <div>RemoteApp2</div>\n      <div>\n        RemoteApp2's name from the redux store : {appName}\n      </div>\n\n      <div>\n        RemoteApp2's language from the redux store : {language}\n      </div>\n\n      <div>\n        RemoteApp2's language derived from host getMessages : {languageFromHost}\n      </div>\n\n      <div>\n        <input\n          style={{ marginRight: '10px' }}\n          type=\"text\"\n          onChange={(e) => {\n            setRemoteAppInput(e.target.value);\n          }}\n        />\n        <button onClick={() => dispatch(changeAppNameAction(remoteAppInput))}>\n          Dispatch RemoteApp new name\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst RemoteAppWrapper = (props) => {\n  const { store } = props;\n  useEffect(() => {\n    store.injectReducer(remoteAppScope, reducer);\n    return () => console.log('Unmounting App3')\n  }, []);\n\n  return (\n    <Provider store={store || {}}>\n      <RemoteApp />\n    </Provider>\n  );\n};\n\nexport default RemoteAppWrapper;\n","const initialState = {\n  appName: 'remoteApp2',\n  language: 'en'\n};\n\nconst remoteAppScope = 'remoteApp2';\nconst hostAppScope = 'host';\n\nconst CHANGE_APP_NAME = 'APP3/CHANGE_APP_NAME';\nconst CHANGE_LANGUAGE = 'APP3/CHANGE_LANGUAGE';\n\nexport const actions = {\n  changeAppNameAction: (appName) => {\n    return { type: CHANGE_APP_NAME, payload: appName };\n  },\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_APP_NAME: {\n      return {\n        ...state,\n        appName: action.payload,\n      };\n    }\n    case CHANGE_LANGUAGE: {\n      return {...state}\n    }\n  }\n  return state;\n};\n\nexport const selectors = {\n  getAppName: (state) => state[remoteAppScope] ? state[remoteAppScope].appName : initialState.appName,\n  getLanguage: (state) => state[remoteAppScope] ? state[remoteAppScope].language : initialState.language,\n  getMessagesFromHost: (state) => state[hostAppScope].messages,\n  getLanguageFromMessages: (state) => {\n    return state[hostAppScope].messages.reduce((acc, message) => {\n      if (message.type === 'CHANGE_LANGUAGE') {\n        acc = message.payload\n      }\n      return acc\n    }, initialState.language)\n  }\n}\n\nexport default reducer;\n"],"sourceRoot":""}