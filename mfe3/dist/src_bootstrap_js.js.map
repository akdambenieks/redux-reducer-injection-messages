{"version":3,"sources":["webpack://@redux-reducer-injection/mfe3/./src/DispatchControls.js","webpack://@redux-reducer-injection/mfe3/./src/MFE3.js","webpack://@redux-reducer-injection/mfe3/./src/bootstrap.js","webpack://@redux-reducer-injection/mfe3/./src/components/Counter/index.jsx","webpack://@redux-reducer-injection/mfe3/./src/components/Counter/styled.jsx","webpack://@redux-reducer-injection/mfe3/./src/constants.js","webpack://@redux-reducer-injection/mfe3/./src/mfe3slice.js","webpack://@redux-reducer-injection/mfe3/./src/store.js","webpack://@redux-reducer-injection/mfe3/./src/styled.jsx"],"names":["selectGlobalLanguage","actions","DispatchControls","dispatch","useDispatch","marginTop","border","padding","margin","getGlobalLanguage","selectors","updateGlobalCount","MFE3","globalLanguage","useSelector","onGlobalIncrement","onGlobalDecrement","GREETING","App","store","ReactDOM","document","getElementById","Counter","title","onIncrement","onDecrement","themeColor","propTypes","PropTypes","string","defaultProps","console","log","CounterButton","styled","CounterContainer","CounterCount","CounterTitle","CounterWrapper","en","fr","scope","initialState","globalActions","createAction","mfe3Slice","createSlice","name","reducers","extraReducers","builder","addCase","state","action","payload","addDefaultCase","getActionLog","actionLogForCount","reducer","createStore","combineReducers","mfe3"],"mappings":"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","file":"src_bootstrap_js.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions } from './mfe3slice.js';\n\nconst { selectGlobalLanguage } = actions;\n\nconst DispatchControls = () => {\n  const dispatch = useDispatch()\n  return (\n    <div style={{ marginTop: '10px', border: 'solid 1px gainsboro', padding: '10px' }}>\n      <p><b>Global Actions Dispatchers</b></p>\n      <button style={{ margin: '5px'}} onClick={() => dispatch(selectGlobalLanguage('en'))}>Select 'en' as Global Language</button>\n      <button style={{ margin: '5px'}} onClick={() => dispatch(selectGlobalLanguage('fr'))}>Select 'fr' as Global Language</button>\n    </div>\n  );\n};\n\nexport default DispatchControls;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions, selectors } from './mfe3slice';\nimport StyledTitle from './styled.jsx';\nimport GREETING from './constants.js';\nimport Counter from './components/Counter/index.jsx';\n\nconst { getGlobalLanguage } = selectors;\nconst { updateGlobalCount } = actions;\n\nconst MFE3 = () => {\n  const dispatch = useDispatch();\n  const globalLanguage = useSelector(getGlobalLanguage);\n  const onGlobalIncrement = () => dispatch(updateGlobalCount(1));\n  const onGlobalDecrement = () =>  dispatch(updateGlobalCount(-1));\n  \n  return (\n    <div style={{ marginTop: '10px' }}>\n      <StyledTitle>{GREETING[globalLanguage]}</StyledTitle>\n      <Counter title=\"Dispatch Global Counter Actions\" onIncrement={onGlobalIncrement} onDecrement={onGlobalDecrement} themeColor=\"blue\" />\n      <ul>\n        <li>Exposes two endpoints (via webpack 5 module federation): <code>reducer</code> and <code>MFE3</code>.  These are imported by the host app.</li>\n        <li>The <code>reducer</code> endpoint provides access to the MFE reducer (via default export) as well a the scope name to be used in the store (via the <code>scope</code> constant)</li>\n        <li>The <code>MFE3</code> endpoint provides access to the MFE react component itself.  <b>NOTE:</b> the exported react component <b>MUST NOT</b> be wrapped in a redux <code>Provider</code> as this would result in a nested store when it is imported into the host which can lead to errors in reading or updating the store</li>\n        <li>Stores <code>globalLanguage</code> in it's local store (scoped to <code>mfe3</code>) for updating display of the greeting</li>\n        <li>MFE3 reducer is subscribed to actions of type <code>GLOBAL/SELECT_LANGUAGE</code> to update the mfe3 scoped store</li>\n        <li>MFE3 dispatches actions of type <code>GLOBAL/UPDATE_COUNT</code> when the '+' and '-' buttons are clicked with <code>1</code> and <code>-1</code> as payloads respectively</li>\n        <li><b>Note:</b> this component does not subscribe to the action (<code>GLOBAL/UPDATE_COUNT</code>) that it dispatches</li>\n        <li><b>Note:</b> to properly display this MFE as a stand alone app it must be provided with its own store.  In this case the root url for the app (<a href=\"http://localhost:3004\" target=\"_blank\">http://localhost:3004</a>) loads MFE1 wrapped in a redux <code>Provider</code> (found in <code>src/bootstrap.js</code>)</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default MFE3;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport MFE3 from './MFE3';\nimport DispatchControls from './DispatchControls';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <DispatchControls />\n      <MFE3 />\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CounterContainer, CounterButton, CounterCount, CounterTitle, CounterWrapper } from './styled.jsx';\n\nconst Counter = ({ title, onIncrement, onDecrement, themeColor }) => {\n  return (\n    <CounterWrapper>\n      <CounterTitle themeColor={themeColor}>{title}</CounterTitle>\n      <CounterContainer>\n        <CounterButton onClick={() => onIncrement()} themeColor={themeColor}>+</CounterButton>\n        <CounterButton onClick={() => onDecrement()} themeColor={themeColor}>-</CounterButton>\n      </CounterContainer>\n    </CounterWrapper>\n  )\n}\n\nCounter.propTypes = {\n  title: PropTypes.string,\n  onIncrement: PropTypes.func,\n  onDecrement: PropTypes.func,\n  themeColor: PropTypes.string,\n}\n\nCounter.defaultProps = {\n  title: '',\n  onIncrement: () => console.log('Increment Count'),\n  onDecrement: () => console.log('Decrement Count'),\n  themeColor: 'blue',\n}\n\nexport default Counter;","import styled from 'styled-components';\n\nexport const CounterButton = styled.button`\n  font-size: 32px;\n  padding: 4px 16px;\n  background-color: white;\n  text-decoration: none;\n  font-weight: 500;\n  color: ${({ themeColor }) => themeColor};\n  border: solid 2px gainsboro;\n  border-radius: 8px;\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    color: gainsboro;\n  }\n  &:first-of-type {\n    margin-right: 32px;\n  }\n`\n\nexport const CounterContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: start;\n  padding: 16px 0px;\n`\n\nexport const CounterCount = styled.div`\n  margin: 0px 16px;\n  font-size: 48px;\n  min-width: 80px;\n  text-align: center;\n`\n\nexport const CounterTitle = styled.div`\n  display: inline;\n  font-size: 24px;\n  color: ${({ themeColor }) => themeColor};\n`\n\nexport const CounterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: middle;\n  font-family: Arial, Helvetica, sans-serif !important;\n  margin-bottom: 48px;\n`","export default {\n  en: 'Welcome to MFE3!',\n  fr: 'Bienvenue a MFE3!'\n}","import { createSlice, createAction } from '@reduxjs/toolkit'\n\nexport const scope = 'mfe3';\n\nconst initialState = {\n  globalLanguage: 'en',\n};\n\n//globally scoped actions must be created individually using createAction\nconst globalActions = {\n  updateGlobalCount: createAction('GLOBAL/UPDATE_COUNT'),\n  selectGlobalLanguage: createAction('GLOBAL/SELECT_LANGUAGE'),\n}\n\nexport const mfe3Slice = createSlice({\n  name: scope,\n  initialState,\n  reducers: {},\n  // global reducers are passed using a builder function via the extraReducers key\n  extraReducers: (builder) => {\n    builder\n      .addCase(globalActions.selectGlobalLanguage, (state, action) => {\n        state.globalLanguage = action.payload;\n      })\n      .addDefaultCase((state) => {\n        state;\n      })\n  }\n});\n\nexport const selectors = {\n  getGlobalLanguage: (state) => state[scope].globalLanguage,\n  getActionLog: (state) => state[scope].actionLogForCount,\n}\n\n// global actions are not necessarily dispatched from the MFE, the MFE may simply subscribe to them\n// The actions are included here so they can be accessed for the component locally via the bootstrap vesrions for local development.\nexport const actions = { ...mfe3Slice.actions, ...globalActions };\n\nexport default mfe3Slice.reducer;","import { createStore, combineReducers } from 'redux';\nimport mfe3 from './mfe3slice';\n\nexport default createStore(combineReducers({\n  mfe3\n}));\n","import styled from 'styled-components';\n\nexport default styled.h1`\n  font-size: 48px;\n  font-weight: 100;\n  font-family: Arial, Helvetica, sans-serif !important;\n`"],"sourceRoot":""}